{
  "name": "etelios-hrms-backend",
  "version": "1.0.0",
  "description": "Etelios HRMS Backend API - Production-grade HRMS for retail and field sales",
  "main": "src/server.js",
  "scripts": {
    "start": "node src/server.js",
    "dev": "nodemon --watch src src/server.js",
    "test": "jest --runInBand --detectOpenHandles",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "lint": "eslint src tests --ext .js",
    "lint:fix": "eslint src tests --ext .js --fix",
    "format": "prettier --write src tests",
    "docker:build": "docker build -t hrms-backend .",
    "docker:run": "docker-compose up -d",
    "docker:prod": "docker-compose -f docker-compose.production.yml up -d",
    "seed": "node scripts/seed.js",
    "migrate": "node scripts/migrate.js",
    "setup:minimal": "node scripts/setup-minimal.js",
    "setup:test-users": "node scripts/setup-test-users.js",
    "test:real-data": "node scripts/test-real-data.js",
    "demo:working": "node scripts/working-example.js",
    "test:apis": "node scripts/test-apis.js",
    "test:all-apis": "node scripts/test-all-apis.js",
    "setup:real-users": "node scripts/setup-real-users.js",
    "test:production": "node test-production-apis.js",
    "test:all-production": "node test-all-apis-production.js",
    "test:asset-register": "node test-asset-register.js",
    "production:test": "npm run setup:real-users && npm run test:all-production",
    "multitenant:start": "node start-multitenant-services.js",
    "multitenant:test": "node test-multitenant-apis.js",
    "multitenant:create-tenant": "curl -X POST http://localhost:3020/api/tenants -H 'Content-Type: application/json' -d '{\"tenantName\":\"Test Company\",\"domain\":\"test.etelios.com\",\"subdomain\":\"test\",\"plan\":\"professional\"}'",
    "multitenant:health": "curl http://localhost:3020/health && curl http://localhost:3021/health",
    "multitenant:install": "cd microservices/tenant-registry-service && npm install && cd ../realtime-service && npm install",
    "multitenant:build": "npm run multitenant:install && npm run multitenant:start"
  },
  "keywords": [
    "hrms",
    "hr",
    "attendance",
    "retail",
    "field-sales",
    "mongodb",
    "nodejs",
    "express"
  ],
  "author": "HRMS Team",
  "license": "MIT",
  "dependencies": {
    "@azure/storage-blob": "^12.28.0",
    "axios": "^1.12.2",
    "bcryptjs": "^2.4.3",
    "bullmq": "^4.15.4",
    "cloudinary": "^1.41.0",
    "colors": "^1.4.0",
    "compression": "^1.7.4",
    "connect-mongo": "^5.1.0",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "docusign-esign": "^6.3.0",
    "dotenv": "^16.6.1",
    "exceljs": "^4.4.0",
    "express": "^4.21.2",
    "express-mongo-sanitize": "^2.2.0",
    "express-rate-limit": "^7.1.5",
    "express-session": "^1.18.2",
    "express-slow-down": "^3.0.0",
    "express-validator": "^7.0.1",
    "helmet": "^7.1.0",
    "hpp": "^0.2.3",
    "http-status": "^2.1.0",
    "ioredis": "^5.3.2",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "lodash": "^4.17.21",
    "moment": "^2.29.4",
    "mongoose": "^8.18.2",
    "morgan": "^1.10.0",
    "multer": "^1.4.5-lts.1",
    "node-cron": "^4.2.1",
    "nodemailer": "^6.9.7",
    "pdfkit": "^0.14.0",
    "qrcode": "^1.5.4",
    "redis": "^5.8.2",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.0",
    "twilio": "^4.19.0",
    "uuid": "^9.0.1",
    "winston": "^3.11.0",
    "winston-daily-rotate-file": "^4.7.1",
    "xss-clean": "^0.1.4"
  },
  "devDependencies": {
    "@types/jest": "^29.5.8",
    "eslint": "^8.55.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-node": "^11.1.0",
    "jest": "^29.7.0",
    "mongodb-memory-server": "^9.1.3",
    "nodemon": "^3.1.10",
    "prettier": "^3.1.1",
    "supertest": "^6.3.3"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "jest": {
    "testEnvironment": "node",
    "testMatch": [
      "**/tests/**/*.test.js"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/tests/setup-simple.js"
    ],
    "collectCoverageFrom": [
      "src/**/*.js",
      "!src/server.js",
      "!src/config/logger.js"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ],
    "testTimeout": 30000,
    "verbose": true
  },
  "directories": {
    "doc": "docs",
    "test": "tests"
  }
}
